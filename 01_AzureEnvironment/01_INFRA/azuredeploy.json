{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources"
        }
      },
      "vmSku": {
        "type": "string",
        "defaultValue": "Standard_D1_v2",
        "metadata": {
          "description": "Size of VMs in the VM Scale Set."
        }
      },
      "vmssName": {
        "type": "string",
        "metadata": {
          "description": "String used as a base for naming resources (9 characters or less). A hash is prepended to this string for some resources, and resource-specific information is appended."
        }
      },
      "instanceCount": {
        "type": "int",
        "defaultValue": 1,
        "minValue": 1,
        "maxValue": 100,
        "metadata": {
          "description": "Number of VM instances (100 or less)."
        }
      },
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "Admin username on all VMs."
        }
      },
      "authenticationType": {
        "type": "string",
        "defaultValue": "sshPublicKey",
        "allowedValues": [
          "sshPublicKey",
          "password"
        ],
        "metadata": {
          "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
        }
      },
      "adminPasswordOrKey": {
        "type": "securestring",
        "metadata": {
          "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
        }
      },
      "_artifactsLocation": {
        "type": "string",
        "defaultValue": "https://raw.githubusercontent.com/henrikmotzkus/typo3/main/01_AzureEnvironment/01_INFRA/",
        "metadata": {
          "description": "The base URI where artifacts required by this template are located"
        }
      },
      "_artifactsLocationSasToken": {
        "type": "securestring",
        "defaultValue": "",
        "metadata": {
          "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated"
        }
      }
    },
    "variables": {
      "addressPrefix": "10.0.0.0/16",
      "subnetPrefix": "10.0.0.0/24",
      "virtualNetworkName": "[concat(parameters('vmssName'), 'vnet')]",
      "publicIPAddressName": "[concat(parameters('vmssName'), 'pip')]",
      "subnetName": "[concat(parameters('vmssName'), 'subnet')]",
      "loadBalancerName": "[concat(parameters('vmssName'), 'lb')]",
      "publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]",
      "natPoolName": "[concat(parameters('vmssName'), 'natpool')]",
      "natpool2Name": "[concat(parameters('vmssName'), 'natpool2')]",
      "bePoolName": "[concat(parameters('vmssName'), 'bepool')]",
      "natStartPort": 50000,
      "natEndPort": 50120,
      "natBackendPort": 22,
      "nicName": "[concat(parameters('vmssName'), 'nic')]",
      "ipConfigName": "[concat(parameters('vmssName'), 'ipconfig')]",
      "frontEndIPConfigID": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', variables('loadBalancerName'),'loadBalancerFrontEnd')]",
      "osType": {
        "publisher": "Canonical",
        "offer": "UbuntuServer",
        "sku": "16.04-LTS",
        "version": "latest"
      },
      "imageReference": "[variables('osType')]",
      "linuxConfiguration": {
        "disablePasswordAuthentication": true,
        "ssh": {
          "publicKeys": [
            {
              "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
              "keyData": "[parameters('adminPasswordOrKey')]"
            }
          ]
        }
      },
      "dbservername": "[concat(parameters('vmssName'), 'dbsrv')]",
      "privatednszone": "mysql.database.azure.com",
      "pename": "[concat(parameters('vmssName'), 'pe')]",
      "storageAccountName": "[concat(parameters('vmssName'), 'nfsstorage')]"
    },
    "resources": [
      {
        "type": "Microsoft.Network/virtualNetworks",
        "apiVersion": "2020-06-01",
        "name": "[variables('virtualNetworkName')]",
        "location": "[parameters('location')]",
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "[variables('addressPrefix')]"
            ]
          },
          "subnets": [
            {
              "name": "[variables('subnetName')]",
              "properties": {
                "addressPrefix": "[variables('subnetPrefix')]",
                "privateEndpointNetworkPolicies": "Disabled"
              }
            }
          ]
          
        }
      },
      {
        "type": "Microsoft.Network/publicIPAddresses",
        "apiVersion": "2020-06-01",
        "name": "[variables('publicIPAddressName')]",
        "location": "[parameters('location')]",
        "properties": {
          "publicIPAllocationMethod": "Dynamic",
          "dnsSettings": {
            "domainNameLabel": "[parameters('vmssName')]"
          }
        }
      },
      {
        "type": "Microsoft.Network/loadBalancers",
        "apiVersion": "2020-06-01",
        "name": "[variables('loadBalancerName')]",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
        ],
        "properties": {
          "frontendIPConfigurations": [
            {
              "name": "LoadBalancerFrontEnd",
              "properties": {
                "publicIPAddress": {
                  "id": "[variables('publicIPAddressID')]"
                }
              }
            }
          ],
          "backendAddressPools": [
            {
              "name": "[variables('bePoolName')]"
            }
          ],
          "loadBalancingRules": [
              {
                  "name": "http",
                  "properties": {
                      "frontendIPConfiguration": {
                          "id": "[concat(resourceId('Microsoft.Network/loadBalancers/', variables('loadBalancerName')), '/frontendIPConfigurations/LoadBalancerFrontEnd')]"
                      },
                      "frontendPort": 80,
                      "backendPort": 80,
                      "enableFloatingIP": false,
                      "idleTimeoutInMinutes": 4,
                      "protocol": "Tcp",
                      "enableTcpReset": false,
                      "loadDistribution": "Default",
                      "backendAddressPool": {
                          "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools/', variables('loadBalancerName'), variables('bePoolName'))]"
                      },
                      "probe": {
                          "id": "[concat(resourceId('Microsoft.Network/loadBalancers/', variables('loadBalancerName')), '/probes/http')]"
                      }
                  }
              }
          ],
          "probes": [
              {
                  "name": "http",
                  "properties": {
                      "protocol": "Tcp",
                      "port": 80,
                      "intervalInSeconds": 5,
                      "numberOfProbes": 2
                  }
              }
          ],
          "inboundNatPools": [
            {
              "name": "[variables('natPoolName')]",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "[variables('frontEndIPConfigID')]"
                },
                "protocol": "Tcp",
                "frontendPortRangeStart": "[variables('natStartPort')]",
                "frontendPortRangeEnd": "[variables('natEndPort')]",
                "backendPort": "[variables('natBackendPort')]"
              }
            },
            {
              "name": "[variables('natPool2Name')]",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "[variables('frontEndIPConfigID')]"
                },
                "protocol": "Tcp",
                "frontendPortRangeStart": 9000,
                "frontendPortRangeEnd": 9120,
                "backendPort": 9000
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachineScaleSets",
        "apiVersion": "2020-06-01",
        "name": "[parameters('vmssName')]",
        "location": "[parameters('location')]",
        "sku": {
          "name": "[parameters('vmSku')]",
          "tier": "Standard",
          "capacity": "[parameters('instanceCount')]"
        },
        "dependsOn": [
          "[resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName'))]",
          "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
        ],
        "properties": {
          "overprovision": "false",
          "upgradePolicy": {
            "mode": "Manual"
          },
          "virtualMachineProfile": {
            "storageProfile": {
              "osDisk": {
                "createOption": "FromImage",
                "caching": "ReadWrite"
              },
              "imageReference": "[variables('imageReference')]"
            },
            "osProfile": {
              "computerNamePrefix": "[parameters('vmssName')]",
              "adminUsername": "[parameters('adminUsername')]",
              "adminPassword": "[parameters('adminPasswordOrKey')]",
              "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
            },
            "networkProfile": {
              "networkInterfaceConfigurations": [
                {
                  "name": "[variables('nicName')]",
                  "properties": {
                    "primary": true,
                    "ipConfigurations": [
                      {
                        "name": "[variables('ipConfigName')]",
                        "properties": {
                          "subnet": {
                            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
                          },
                          "loadBalancerBackendAddressPools": [
                            {
                              "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('loadBalancerName'), variables('bePoolName'))]"
                            }
                          ],
                          "loadBalancerInboundNatPools": [
                            {
                              "id": "[resourceId('Microsoft.Network/loadBalancers/inboundNatPools', variables('loadBalancerName'), variables('natPoolName'))]"
                            },
                            {
                              "id": "[resourceId('Microsoft.Network/loadBalancers/inboundNatPools', variables('loadBalancerName'), variables('natpool2Name'))]"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "extensionProfile": {
              "extensions": [
                {
                  "name": "typo3extension",
                  "properties": {
                    "publisher": "Microsoft.Azure.Extensions",
                    "type": "CustomScript",
                    "typeHandlerVersion": "2.0",
                    "autoUpgradeMinorVersion": true,
                    "settings": {
                      "fileUris": [
                        "[uri(parameters('_artifactsLocation'), concat('installscript.sh', parameters('_artifactsLocationSasToken')))]"
                      ],
                      "commandToExecute": "bash installscript.sh"
                    }
                  }
                }
              ]
            }
          }
        }
      },
      {
        "type": "Microsoft.Insights/autoscaleSettings",
        "apiVersion": "2015-04-01",
        "name": "autoscalehost",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[resourceId('Microsoft.Compute/virtualMachineScaleSets', parameters('vmSSName'))]"
        ],
        "properties": {
          "name": "autoscalehost",
          "targetResourceUri": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', parameters('vmSSName'))]",
          "enabled": true,
          "profiles": [
            {
              "name": "Profile1",
              "capacity": {
                "minimum": "1",
                "maximum": "10",
                "default": "1"
              },
              "rules": [
                {
                  "metricTrigger": {
                    "metricName": "Percentage CPU",
                    "metricResourceUri": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', parameters('vmSSName'))]",
                    "timeGrain": "PT1M",
                    "statistic": "Average",
                    "timeWindow": "PT5M",
                    "timeAggregation": "Average",
                    "operator": "GreaterThan",
                    "threshold": 60
                  },
                  "scaleAction": {
                    "direction": "Increase",
                    "type": "ChangeCount",
                    "value": "1",
                    "cooldown": "PT1M"
                  }
                },
                {
                  "metricTrigger": {
                    "metricName": "Percentage CPU",
                    "metricResourceUri": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', parameters('vmSSName'))]",
                    "timeGrain": "PT1M",
                    "statistic": "Average",
                    "timeWindow": "PT5M",
                    "timeAggregation": "Average",
                    "operator": "LessThan",
                    "threshold": 30
                  },
                  "scaleAction": {
                    "direction": "Decrease",
                    "type": "ChangeCount",
                    "value": "1",
                    "cooldown": "PT1M"
                  }
                }
              ]
            }
          ]
        }
      },
      {
        "type": "Microsoft.DBforMySQL/servers",
        "apiVersion": "2017-12-01",
        "name": "[variables('dbservername')]",
        "location": "westeurope",
        "sku": {
            "name": "GP_Gen5_4",
            "tier": "GeneralPurpose",
            "family": "Gen5",
            "capacity": 4
        },
        "properties": {
            "storageProfile": {
                "storageMB": 5120,
                "backupRetentionDays": 7,
                "geoRedundantBackup": "Disabled",
                "storageAutogrow": "Enabled"
                
            },
            "version": "5.7",
            "sslEnforcement": "Disabled",
            "minimalTlsVersion": "TLSEnforcementDisabled",
            "infrastructureEncryption": "Disabled",
            "administratorLogin":"adminlocal",
            "administratorLoginPassword":"Password123!",
            "createMode": "Default",
            "publicNetworkAccess": "Disabled"
        }
      },
      {
          "type": "Microsoft.DBforMySQL/servers/databases",
          "apiVersion": "2017-12-01",
          "name": "[concat(variables('dbservername'), '/cms1')]",
          "dependsOn": [
              "[resourceId('Microsoft.DBforMySQL/servers', variables('dbservername'))]"
          ],
          "properties": {
              "charset": "utf8",
              "collation": "utf8_general_ci"
          }
      },
      {
          "type": "Microsoft.DBforMySQL/servers/securityAlertPolicies",
          "apiVersion": "2017-12-01",
          "name": "[concat(variables('dbservername'), '/Default')]",
          "dependsOn": [
              "[resourceId('Microsoft.DBforMySQL/servers', variables('dbservername'))]"
          ],
          "properties": {
              "state": "Disabled",
              "disabledAlerts": [
                  ""
              ],
              "emailAddresses": [
                  ""
              ],
              "emailAccountAdmins": false,
              "retentionDays": 0
          }
      },
      {
          "type": "Microsoft.Network/privateDnsZones",
          "apiVersion": "2018-09-01",
          "name": "[variables('privatednszone')]",
          "location": "global",
          "properties": {
              "maxNumberOfRecordSets": 25000,
              "maxNumberOfVirtualNetworkLinks": 1000,
              "maxNumberOfVirtualNetworkLinksWithRegistration": 100,
              "numberOfRecordSets": 2,
              "numberOfVirtualNetworkLinks": 1,
              "numberOfVirtualNetworkLinksWithRegistration": 0,
              "provisioningState": "Succeeded"
          }
      },
      {
          "type": "Microsoft.Network/privateDnsZones/A",
          "apiVersion": "2018-09-01",
          "name": "[concat(variables('privatednszone'), '/typo3test23dbsrv')]",
          "dependsOn": [
              "[resourceId('Microsoft.Network/privateDnsZones', variables('privatednszone'))]"
          ],
          "properties": {
              "metadata": {
                  "creator": "created by private endpoint mysql-pe"
              },
              "ttl": 10,
              "aRecords": [
                  {
                      "ipv4Address": "10.0.0.5"
                  }
              ]
          }
      },
      {
          "type": "Microsoft.Network/privateDnsZones/SOA",
          "apiVersion": "2018-09-01",
          "name": "[concat(variables('privatednszone'), '/@')]",
          "dependsOn": [
              "[resourceId('Microsoft.Network/privateDnsZones', variables('privatednszone'))]"
          ],
          "properties": {
              "ttl": 3600,
              "soaRecord": {
                  "email": "azureprivatedns-host.microsoft.com",
                  "expireTime": 2419200,
                  "host": "azureprivatedns.net",
                  "minimumTtl": 10,
                  "refreshTime": 3600,
                  "retryTime": 300,
                  "serialNumber": 1
              }
          }
      },
      {
          "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
          "apiVersion": "2018-09-01",
          "name": "[concat(variables('privatednszone'), '/',variables('privatednszone'),'-link')]",
          "location": "global",
          "dependsOn": [
              "[resourceId('Microsoft.Network/privateDnsZones', variables('privatednszone'))]",
              "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
          ],
          "properties": {
              "registrationEnabled": false,
              "virtualNetwork": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
              }
          }
      },
      {
          "type": "Microsoft.Network/privateEndpoints",
          "apiVersion": "2020-11-01",
          "name": "[variables('pename')]",
          "location": "westeurope",
          "dependsOn": [
              "[resourceId('Microsoft.DBforMySQL/servers', variables('dbservername'))]",
              "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
          ],
          "properties": {
              "privateLinkServiceConnections": [
                  {
                      "name": "[variables('pename')]",
                      "properties": {
                          "privateLinkServiceId": "[resourceId('Microsoft.DBforMySQL/servers', variables('dbservername'))]",
                          "groupIds": [
                              "mysqlServer"
                          ],
                          "privateLinkServiceConnectionState": {
                              "status": "Approved",
                              "description": "Auto-approved",
                              "actionsRequired": "None"
                          }
                      }
                  }
              ],
              "manualPrivateLinkServiceConnections": [],
              "subnet": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
              },
              "customDnsConfigs": []
          }
      },
      {
          "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
          "apiVersion": "2020-11-01",
          "name": "[concat(variables('pename'), '/default')]",
          "dependsOn": [
              "[resourceId('Microsoft.Network/privateEndpoints', variables('pename'))]",
              "[resourceId('Microsoft.Network/privateDnsZones', variables('privatednszone'))]"
          ],
          "properties": {
              "privateDnsZoneConfigs": [
                  {
                      "name": "privatelink-mysql-database-azure-com",
                      "properties": {
                          "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', variables('privatednszone'))]"
                      }
                  }
              ]
          }
      },
      {
        "name": "[variables('storageAccountName')]",
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2019-06-01",
        "location": "[parameters('location')]",
        "properties": {
            "minimumTlsVersion": "TLS1_2",
            "supportsHttpsTrafficOnly": true,
            "allowBlobPublicAccess": false,
            "allowSharedKeyAccess": false,
            "networkAcls": {
                "defaultAction": "Deny",
                "ipRules": []
            }
        },
        "dependsOn": [],
        "sku": {
            "name": "Premium_LRS"
        },
        "kind": "FileStorage",
        "tags": {}
      },
      {
          "name": "[concat(variables('storageAccountName'), '/default')]",
          "type": "Microsoft.Storage/storageAccounts/fileservices",
          "apiVersion": "2019-06-01",
          "properties": {
              "shareDeleteRetentionPolicy": {
                  "enabled": true,
                  "days": 7
              }
          },
          "dependsOn": [
              "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]"
          ]
      },
      {
          "apiVersion": "2020-10-01",
          "type": "Microsoft.Resources/deployments",
          "name": "nfsprivateEndpoint",
          "subscriptionId": "2abc2ec1-2238-430d-bf52-40cb7dc8b652",
          "resourceGroup": "[parameters('location')]",
          "dependsOn": [
              "Microsoft.Storage/storageAccounts/nfsstoragetypo3"
          ],
          "resources": [],
          "properties": {
              "mode": "Incremental",
              "parameters": {
                  "privateEndpointName": {
                      "value": "nfspe"
                  },
                  "privateEndpointConnectionName": {
                      "value": "nfspe"
                  },
                  "privateLinkServiceId": {
                      "value": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
                  },
                  "groupId": {
                      "value": "file"
                  },
                  "subnetId": {
                      "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
                  },
                  "location": {
                      "value": "westeurope"
                  },
                  "tags": {
                      "value": {}
                  }
              },
              "templatelink": {
                  "contentVersion": "1.0.0.0",
                  "uri": "https://storage.hosting.portal.azure.net/storage/Content/4.13.393.248/DeploymentTemplates/PrivateEndpointForStorage.json"
              }
          }
      },
      {
          "apiVersion": "2018-05-01",
          "name": "nfsPrivateDns",
          "type": "Microsoft.Resources/deployments",
          "resourceGroup": "[parameters('location')]",
          "dependsOn": [
              "[string('nfsprivateEndpoint')]"
          ],
          "properties": {
              "mode": "Incremental",
              "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "resources": [
                      {
                          "type": "Microsoft.Network/privateDnsZones",
                          "apiVersion": "2018-09-01",
                          "name": "[string('privatelink.file.core.windows.net')]",
                          "location": "global",
                          "tags": {},
                          "properties": {}
                      },
                      {
                          "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                          "apiVersion": "2018-09-01",
                          "name": "[concat(string('privatelink.file.core.windows.net'), '/vnetlink')]",
                          "location": "global",
                          "dependsOn": [
                              "[string('privatelink.file.core.windows.net')]"
                          ],
                          "properties": {
                              "virtualNetwork": {
                                  "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
                              },
                              "registrationEnabled": false
                          }
                      },
                      {
                          "apiVersion": "2017-05-10",
                          "name": "nfsEndpointDnsRecord",
                          "type": "Microsoft.Resources/deployments",
                          "dependsOn": [
                              "[string('privatelink.file.core.windows.net')]"
                          ],
                          "properties": {
                              "mode": "Incremental",
                              "templatelink": {
                                  "contentVersion": "1.0.0.0",
                                  "uri": "https://storage.hosting.portal.azure.net/storage/Content/4.13.393.248/DeploymentTemplates/PrivateDnsForPrivateEndpoint.json"
                              },
                              "parameters": {
                                  "privateDnsName": {
                                      "value": "[string('privatelink.file.core.windows.net')]"
                                  },
                                  "privateEndpointNicResourceId": {
                                      "value": "[reference('nfsprivateEndpoint').outputs.networkInterfaceId.value]"
                                  },
                                  "nicRecordsTemplateUri": {
                                      "value": "https://storage.hosting.portal.azure.net/storage/Content/4.13.393.248/DeploymentTemplates/PrivateDnsForPrivateEndpointNic.json"
                                  },
                                  "ipConfigRecordsTemplateUri": {
                                      "value": "https://storage.hosting.portal.azure.net/storage/Content/4.13.393.248/DeploymentTemplates/PrivateDnsForPrivateEndpointIpConfig.json"
                                  },
                                  "uniqueId": {
                                      "value": "0.31003212878805697"
                                  },
                                  "existingRecords": {
                                      "value": {}
                                  }
                              }
                          }
                      }
                  ]
              }
          },
          "subscriptionId": "[string('2abc2ec1-2238-430d-bf52-40cb7dc8b652')]"
          }
  
    
    ]
  }